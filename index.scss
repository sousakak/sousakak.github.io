@use "utils" as *;

// inputのチェックボックスを利用して言語選択可能に
*[class^="en-"] {
    display: none;
}

.body {
    @extend %body;
    width: $body-length;
    height: $body-length;
    @include font-size();

    .header {
        @extend %header;
        display: flex;
        justify-content: space-between;
        z-index: 1;

        .header-content-wrapper {
            width: 5vmin;
            padding: #{$header-gap};
        }
        
        .header-menu {
            @include headIcons(menu);
        }

        .menu {
            .menu-icon:has(.menu-toggle:checked) + .menu-overlay {
                display: block;
                position: absolute;
                top: 0;
                left: 0;
                width: $body-length;
                height: $body-length;
                @include font-size();
                padding: 1em;
                opacity: 1;
                transition: opacity 0.3s 0.15s ease-out;
                z-index: 1;
            }
            .menu-icon:not(:has(.menu-toggle:checked)) + .menu-overlay {
                height: 0;
                opacity: 0;
            }
        }
    }

    h2 {
        font-family: $title-font;
        @include font-size($ul: 30, $min: 14);
    }

    .content-body {
        @include blur($background-image) {
            overflow-y: clip;
            &::before {
                content: '';
                position: absolute;
                @extend %blur-before;
                z-index: -1;
            }
        };

        width: 100%;
        height: 100%;
        margin: 0;
        position: relative;
        z-index: 0;

        .content-titlebox {
            position: absolute;
            bottom: 15vmin;
            left: 7.5vmin;
            width: 35vmin;
            padding: 0.3em;
            background-color: rgba($color: #000000, $alpha: 0.4);
            color: #dfdfdf;
            .content-title {
                font-weight: normal;
            }
            .content-subtitle {
                @extend .content-title;
                @include font-size($ul: 18, $min: 2);
            }
        }
    }

    .footer {
        @include footer() {
            .footer-icon {
                transition: all 0.2s 0s ease-out;
                @include hover{
                    transform: scale(1.3);
                };
            }
        };
        .waves-svg {
            position: relative;
            margin-bottom: -7px;
            width: 100%;
            height: 10vmin;
        }
        .parallax {
            & > use {
                animation: waving 25s cubic-bezier(.55,.5,.45,.5) infinite;
                @for $No from 1 through 4 {
                    @if $No == 4 {
                        &:nth-child(#{$No}) {
                            animation-delay: #{-1 - $No}s;
                            animation-duration: #{8 + 3 * $No}s;
                            fill: transparentize(color(main, index), 0.8);
                        }
                    }
                    @else {
                        &:nth-child(#{$No}) {
                            animation-delay: #{-1 - $No}s;
                            animation-duration: #{4 + 3 * $No}s;
                            fill: transparentize(color(main, index), 0.8 - 0.2 * $No);
                        }
                    }
                    
                }
            }
        }
        @keyframes waving {
            0% {
                transform: translate3d(-90px,0,0);
            }
            100% { 
                transform: translate3d(85px,0,0);
            }
        }
        .footer-content {
            position:relative;
            height: 5vmin;
            display: flex;
            text-align: center;
            background-color: color(main, index);
            & > .footer-credit {
                width: calc(100% - 50px);
            }
            & > .footer-links {
                svg[class$="-icon"] {
                    width: 3vmin;
                    height: 3vmin;
                }
            }
        }
    }
}